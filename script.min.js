let map;let userMarker;let correctLocationMarker;let infoWindow;let mapOverlayMarker;let studyModeMarkers=[];let currentStudyingSectionName="";let currentStudyingSectionItems=[];const ACCEPTABLE_POINT_RADIUS_KM=50;const DEFAULT_RANDOM_QUESTIONS=10;const DEFAULT_INDIA_CENTER={lat:22.5937,lng:78.9629};const DEFAULT_INDIA_ZOOM=5;const MAP_ID_COLORFUL="f8aa7b5bfa481b5a423c36dc";const MAP_ID_EXAM_WITH_STATES="f8aa7b5bfa481b5a784041bc";const MAP_ID_EXAM_NO_STATES="f8aa7b5bfa481b5a8231a404";let currentQuizItems=[];let currentQuestionIndex=0;let currentQuestion=null;let score=0;let selectedMcqOption=null;let historySectionsDiv,geographySectionsDiv,startRandomQuizBtnSidebar;let toggleHintsCheckbox,toggleDarkModeCheckbox,toggleSignificanceCheckbox;let quizActiveMessageEl,quizContentAreaEl,endScreenContentEl;let currentQuizTitleEl,scoreEl,questionProgressEl;let questionTextEl,hintTextEl;let mcqOptionsContainer,submitAnswerBtn;let feedbackDisplayEl,feedbackTextEl,significanceTextEl,nextQuestionBtn;let finalScoreEl,totalPossibleScoreEl,returnToSectionsBtn;let leftSidebarPane,sidebarToggleBtn,sidebarTitleFull,sidebarTitleCollapsed;let mobileHeader,mobileSidebarToggle;let mobileOverlay;let studyModeContentEl,studyModeTitleEl,studyItemsListEl;let returnToSectionsFromStudyBtn,startQuizFromStudyBtn;let toggleStudyLabelsCheckbox;let toggleStateBoundariesCheckbox,toggleColorfulMapCheckbox;let mobileSidebarCloseBtn;let mobileMenuOverlay;let showHints=!0;let showSignificance=!0;let showStudyLabels=!0;let showStateBoundaries=!0;let useColorfulMap=!1;const examStyleMapConfig=[{featureType:"all",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#0E87CC"}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{visibility:"on"},{color:"#000000"},{weight:0.8}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{color:"#000000"},{weight:1.5},{visibility:"on"}]},{featureType:"administrative.province",elementType:"geometry.stroke",stylers:[{color:"#000000"},{weight:0.8},{visibility:"on"}]},{featureType:"road",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{visibility:"off"}]},{featureType:"transit",stylers:[{visibility:"off"}]}];const examStyleMapNoStateBoundariesConfig=[{featureType:"all",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#dddddd"}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{visibility:"on"},{color:"#000000"},{weight:0.8}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{color:"#000000"},{weight:1.5},{visibility:"on"}]},{featureType:"administrative.province",elementType:"geometry.stroke",stylers:[{color:"#ffffff"},{visibility:"on"}]},{featureType:"road",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{visibility:"off"}]},{featureType:"transit",stylers:[{visibility:"off"}]}];const colorfulMapConfig=null;function initApp(){console.log("initApp called - Advanced Layout");historySectionsDiv=document.getElementById('history-sections');geographySectionsDiv=document.getElementById('geography-sections');startRandomQuizBtnSidebar=document.getElementById('startRandomQuizBtnSidebar');toggleHintsCheckbox=document.getElementById('toggleHints');toggleDarkModeCheckbox=document.getElementById('toggleDarkMode');toggleSignificanceCheckbox=document.getElementById('toggleSignificance');quizActiveMessageEl=document.getElementById('quiz-active-message');quizContentAreaEl=document.getElementById('quiz-content-area');endScreenContentEl=document.getElementById('end-screen-content');currentQuizTitleEl=document.getElementById('current-quiz-title');scoreEl=document.getElementById('score');questionProgressEl=document.getElementById('question-progress');questionTextEl=document.getElementById('question-text');hintTextEl=document.getElementById('hint-text');mcqOptionsContainer=document.getElementById('mcq-options-container');submitAnswerBtn=document.getElementById('submitAnswerBtn');feedbackDisplayEl=document.getElementById('feedback-display');feedbackTextEl=document.getElementById('feedback-text');significanceTextEl=document.getElementById('significance-text');nextQuestionBtn=document.getElementById('nextQuestionBtn');finalScoreEl=document.getElementById('final-score');totalPossibleScoreEl=document.getElementById('total-possible-score');returnToSectionsBtn=document.getElementById('returnToSectionsBtn');mapOverlayInfoEl=document.getElementById('map-overlay-info');leftSidebarPane=document.getElementById('left-sidebar-pane');sidebarToggleBtn=document.getElementById('sidebar-toggle-btn');sidebarTitleFull=document.querySelector('.sidebar-title-full');sidebarTitleCollapsed=document.querySelector('.sidebar-title-collapsed');mobileHeader=document.getElementById('mobile-header');mobileSidebarToggle=document.getElementById('mobile-sidebar-toggle');studyModeContentEl=document.getElementById('study-mode-content');studyModeTitleEl=document.getElementById('study-mode-title');studyItemsListEl=document.getElementById('study-items-list');returnToSectionsFromStudyBtn=document.getElementById('returnToSectionsFromStudyBtn');startQuizFromStudyBtn=document.getElementById('startQuizFromStudyBtn');toggleStudyLabelsCheckbox=document.getElementById('toggleStudyLabels');toggleStateBoundariesCheckbox=document.getElementById('toggleStateBoundaries');toggleColorfulMapCheckbox=document.getElementById('toggleColorfulMap');mobileSidebarCloseBtn=document.getElementById('mobile-sidebar-close-btn');mobileMenuOverlay=document.getElementById('mobile-menu-overlay');const INDIA_BOUNDS={north:37.0,south:7.0,west:67.0,east:98.0};map=new google.maps.Map(document.getElementById("map"),{center:{lat:22.5937,lng:78.9629},zoom:5,minZoom:4,maxZoom:8,restriction:{latLngBounds:INDIA_BOUNDS,strictBounds:!1},mapTypeControl:!1,streetViewControl:!1,fullscreenControl:!1,zoomControl:!0,mapId:'artful-oxygen-461006-f4',styles:getCurrentMapStyle()});showStateBoundaries=toggleStateBoundariesCheckbox.checked;useColorfulMap=toggleColorfulMapCheckbox.checked;toggleStateBoundariesCheckbox.disabled=useColorfulMap;createMap();infoWindow=new google.maps.InfoWindow();populateSectionsSidebar();setupGlobalEventListeners();setupSettingsListeners();setupSidebarToggles();showQuestionPaneView('initialMessage');console.log("App Initialized. Showing initial message.")}
function showQuestionPaneView(viewName){quizActiveMessageEl.classList.replace('active-view','hidden-view');quizContentAreaEl.classList.replace('active-view','hidden-view');endScreenContentEl.classList.replace('active-view','hidden-view');studyModeContentEl.classList.replace('active-view','hidden-view');if(viewName==='initialMessage'){quizActiveMessageEl.classList.replace('hidden-view','active-view')}else if(viewName==='quizActive'){quizContentAreaEl.classList.replace('hidden-view','active-view')}else if(viewName==='endScreen'){endScreenContentEl.classList.replace('hidden-view','active-view')}else if(viewName==='studyMode'){studyModeContentEl.classList.replace('hidden-view','active-view')}}
function populateSectionsSidebar(){const categories={History:{},Geography:{}};allMapItems.forEach(item=>{if(!categories[item.category])categories[item.category]={};if(!categories[item.category][item.subCategory]){categories[item.category][item.subCategory]=[]}
categories[item.category][item.subCategory].push(item)});const createSectionEntry=(containerDiv,subCategoryName,items)=>{const group=document.createElement('div');group.className='section-item-group';const quizBtn=document.createElement('button');quizBtn.className='start-quiz-for-section-btn';quizBtn.title=`Start quiz for ${subCategoryName}`;quizBtn.textContent=`${subCategoryName} (${items.length})`;quizBtn.addEventListener('click',()=>startQuiz(subCategoryName,items));const viewAllBtn=document.createElement('button');viewAllBtn.className='view-all-for-section-btn';viewAllBtn.innerHTML='View';viewAllBtn.title=`View all answers for ${subCategoryName}`;viewAllBtn.addEventListener('click',()=>showAllAnswersForSection(subCategoryName,items));group.appendChild(quizBtn);group.appendChild(viewAllBtn);containerDiv.appendChild(group)};historySectionsDiv.innerHTML='<h4 class="nav-title-full">History</h4>';for(const subCategory in categories.History){createSectionEntry(historySectionsDiv,subCategory,categories.History[subCategory])}
geographySectionsDiv.innerHTML='<h4 class="nav-title-full">Geography</h4>';for(const subCategory in categories.Geography){createSectionEntry(geographySectionsDiv,subCategory,categories.Geography[subCategory])}}
function setupSettingsListeners(){toggleHintsCheckbox.addEventListener('change',(e)=>{showHints=e.target.checked;applyHintVisibility()});toggleDarkModeCheckbox.addEventListener('change',(e)=>{document.body.classList.toggle('dark-mode',e.target.checked)});toggleSignificanceCheckbox.addEventListener('change',(e)=>{showSignificance=e.target.checked;applySignificanceVisibility()});toggleStudyLabelsCheckbox.addEventListener('change',(e)=>{showStudyLabels=e.target.checked;updateStudyModeMarkersLabels()});toggleStateBoundariesCheckbox.addEventListener('change',(e)=>{showStateBoundaries=e.target.checked;console.log("State Boundaries Toggled:",showStateBoundaries);createMap()});toggleColorfulMapCheckbox.addEventListener('change',(e)=>{useColorfulMap=e.target.checked;console.log("Colorful Map Toggled:",useColorfulMap);toggleStateBoundariesCheckbox.disabled=useColorfulMap;createMap()});toggleStateBoundariesCheckbox.disabled=toggleColorfulMapCheckbox.checked}
function updateStudyModeMarkersLabels(){if(studyModeContentEl.classList.contains('active-view')){studyModeMarkers.forEach(marker=>{if(showStudyLabels){if(marker.customLabelText){marker.setLabel({text:marker.customLabelText,color:'black',fontWeight:'bold',fontSize:'10px',className:'map-marker-label'})}}else{marker.setLabel(null)}})}}
function applyHintVisibility(){if(hintTextEl){hintTextEl.classList.toggle('hidden-by-setting',!showHints)}}
function applySignificanceVisibility(){if(significanceTextEl){significanceTextEl.classList.toggle('hidden-by-setting',!showSignificance)}}
function setupGlobalEventListeners(){startRandomQuizBtnSidebar.addEventListener('click',()=>{const randomItems=shuffleArray([...allMapItems]).slice(0,DEFAULT_RANDOM_QUESTIONS);startQuiz('Random Review',randomItems)});map.addListener('click',handleMapClick);submitAnswerBtn.addEventListener('click',handleSubmitAnswer);nextQuestionBtn.addEventListener('click',()=>{currentQuestionIndex++;loadNextQuestion()});returnToSectionsBtn.addEventListener('click',()=>{clearAllMapMarkers();showQuestionPaneView('initialMessage');if(window.innerWidth>768&&leftSidebarPane.classList.contains('collapsed')){leftSidebarPane.classList.remove('collapsed');updateSidebarToggleIcon()}});startQuizFromStudyBtn.addEventListener('click',()=>{if(currentStudyingSectionName&&currentStudyingSectionItems.length>0){clearAllMapMarkers();startQuiz(currentStudyingSectionName,currentStudyingSectionItems)}else{alert("No section selected for study or section is empty.");showQuestionPaneView('initialMessage')}})}
function startQuiz(quizTitle,items){console.log(`Starting quiz: ${quizTitle}`);currentQuizItems=items;currentQuestionIndex=0;score=0;selectedMcqOption=null;if(map){clearAllMapMarkers();map.setCenter(DEFAULT_INDIA_CENTER);map.setZoom(DEFAULT_INDIA_ZOOM);console.log("Map view reset for new quiz.")}
currentQuizTitleEl.textContent=quizTitle;scoreEl.textContent=score;feedbackDisplayEl.classList.add('hidden-view');feedbackDisplayEl.classList.remove('correct','incorrect');nextQuestionBtn.style.display='none';submitAnswerBtn.disabled=!0;submitAnswerBtn.style.display='inline-block';if(!currentQuizItems||currentQuizItems.length===0){quizActiveMessageEl.innerHTML=`<p>No items found for "${quizTitle}". Please select another.</p>`;showQuestionPaneView('initialMessage');return}
showQuestionPaneView('quizActive');loadNextQuestion();if(window.innerWidth>768){if(!leftSidebarPane.classList.contains('collapsed')){leftSidebarPane.classList.add('collapsed');updateSidebarToggleIcon()}}else{if(leftSidebarPane.classList.contains('mobile-sidebar-open')){leftSidebarPane.classList.remove('mobile-sidebar-open');if(mobileMenuOverlay)mobileMenuOverlay.classList.remove('active');}}}
function loadNextQuestion(){if(currentQuestionIndex===0){clearAllMapMarkers()}
if(userMarker)userMarker.setMap(null);if(correctLocationMarker)correctLocationMarker.setMap(null);if(mapOverlayMarker)mapOverlayMarker.setMap(null);userMarker=null;correctLocationMarker=null;mapOverlayMarker=null;mcqOptionsContainer.innerHTML='';mcqOptionsContainer.classList.add('hidden-view');feedbackDisplayEl.classList.add('hidden-view');nextQuestionBtn.style.display='none';submitAnswerBtn.disabled=!0;submitAnswerBtn.style.display='inline-block';selectedMcqOption=null;if(currentQuestionIndex<currentQuizItems.length){currentQuestion=currentQuizItems[currentQuestionIndex];questionTextEl.textContent=currentQuestion.questionText;hintTextEl.textContent=currentQuestion.hint?`${currentQuestion.hint}`:"";applyHintVisibility();questionProgressEl.textContent=`${currentQuestionIndex + 1}/${currentQuizItems.length}`;if(currentQuestion.type==='point'){}else if(currentQuestion.type==='identify_region_mcq'){mcqOptionsContainer.classList.remove('hidden-view');currentQuestion.mcqOptions.forEach(optionText=>{const btn=document.createElement('button');btn.textContent=optionText;btn.addEventListener('click',(e)=>handleMcqOptionSelect(e.target,optionText));mcqOptionsContainer.appendChild(btn)});if(currentQuestion.mapMarkerInfo&&currentQuestion.mapMarkerInfo.label&&typeof currentQuestion.mapMarkerInfo.lat==='number'&&typeof currentQuestion.mapMarkerInfo.lng==='number'){const regionMarkerLabelElement=document.createElement('div');regionMarkerLabelElement.textContent=currentQuestion.mapMarkerInfo.label;regionMarkerLabelElement.style.padding='5px 8px';regionMarkerLabelElement.style.backgroundColor='rgba(0, 0, 0, 0.7)';regionMarkerLabelElement.style.color='white';regionMarkerLabelElement.style.borderRadius='50%';regionMarkerLabelElement.style.fontSize='16px';regionMarkerLabelElement.style.fontWeight='bold';regionMarkerLabelElement.style.textAlign='center';regionMarkerLabelElement.style.minWidth='25px';regionMarkerLabelElement.style.minHeight='25px';regionMarkerLabelElement.style.display='flex';regionMarkerLabelElement.style.alignItems='center';regionMarkerLabelElement.style.justifyContent='center';regionMarkerLabelElement.style.border='1px solid white';mapOverlayMarker=new google.maps.marker.AdvancedMarkerElement({position:{lat:currentQuestion.mapMarkerInfo.lat,lng:currentQuestion.mapMarkerInfo.lng},map:map,content:regionMarkerLabelElement,title:`Region ${currentQuestion.mapMarkerInfo.label}: ${currentQuestion.targetAreaDescription || currentQuestion.name}`,});map.panTo({lat:currentQuestion.mapMarkerInfo.lat,lng:currentQuestion.mapMarkerInfo.lng});map.setZoom(6)}else{console.warn("MapMarkerInfo for identify_region_mcq is incomplete. No map marker shown for:",currentQuestion.name)}}}else{endQuiz()}}
function handleMapClick(event){if(!quizContentAreaEl.classList.contains('active-view')||!currentQuestion||currentQuestion.type!=='point'||(submitAnswerBtn.disabled===!1&&nextQuestionBtn.style.display!=='none')){return}
if(userMarker)userMarker.setMap(null);userMarker=new google.maps.Marker({position:event.latLng,map:map,draggable:!0,icon:{url:"http://maps.google.com/mapfiles/ms/icons/blue-dot.png"}});submitAnswerBtn.disabled=!1}
function handleMcqOptionSelect(buttonEl,optionText){const currentlySelected=mcqOptionsContainer.querySelector('.selected');if(currentlySelected)currentlySelected.classList.remove('selected');buttonEl.classList.add('selected');selectedMcqOption=optionText;submitAnswerBtn.disabled=!1}
function handleSubmitAnswer(){if(!currentQuestion)return;submitAnswerBtn.disabled=!0;let isCorrect=!1;let resultInfo={};if(currentQuestion.type==='point'){if(!userMarker){alert("Please place a pin!");submitAnswerBtn.disabled=!1;return}
const userPos=userMarker.getPosition();const correctPos=new google.maps.LatLng(currentQuestion.lat,currentQuestion.lng);resultInfo.distance=google.maps.geometry.spherical.computeDistanceBetween(userPos,correctPos)/1000;isCorrect=resultInfo.distance<=ACCEPTABLE_POINT_RADIUS_KM;if(userMarker)userMarker.setDraggable(!1);}else if(currentQuestion.type==='identify_region_mcq'){if(!selectedMcqOption){alert("Please select an option!");submitAnswerBtn.disabled=!1;return}
isCorrect=selectedMcqOption===currentQuestion.correctOption;resultInfo.selected=selectedMcqOption;resultInfo.correct=currentQuestion.correctOption}
if(isCorrect){score++;scoreEl.textContent=score}
showFeedback(isCorrect,resultInfo)}
function showFeedback(isCorrect,resultInfo){feedbackDisplayEl.classList.remove('hidden-view','correct','incorrect');feedbackDisplayEl.classList.add(isCorrect?'correct':'incorrect');let feedbackMsg="";if(currentQuestion.type==='point'){feedbackMsg=isCorrect?`Correct! Well done.`:`Not quite. That was ${resultInfo.distance.toFixed(1)} km away.`;correctLocationMarker=new google.maps.Marker({position:{lat:currentQuestion.lat,lng:currentQuestion.lng},map:map,title:"Correct: "+currentQuestion.name,icon:{url:"http://maps.google.com/mapfiles/ms/icons/green-dot.png"}});map.panTo({lat:currentQuestion.lat,lng:currentQuestion.lng})}else if(currentQuestion.type==='identify_region_mcq'){feedbackMsg=isCorrect?`Correct! The answer is ${currentQuestion.correctOption}.`:`Incorrect. You chose ${resultInfo.selected}. Correct: ${currentQuestion.correctOption}.`}
feedbackTextEl.textContent=feedbackMsg;significanceTextEl.textContent=currentQuestion.significance||"Significance not available.";applySignificanceVisibility();nextQuestionBtn.style.display='inline-block';submitAnswerBtn.style.display='none'}
function endQuiz(){finalScoreEl.textContent=score;totalPossibleScoreEl.textContent=currentQuizItems.length;showQuestionPaneView('endScreen')}
function shuffleArray(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}
return array}
function setupSidebarToggles(){sidebarToggleBtn.addEventListener('click',(event)=>{event.stopPropagation();leftSidebarPane.classList.toggle('collapsed');updateSidebarToggleIcon()});mobileSidebarToggle.addEventListener('click',()=>{leftSidebarPane.classList.add('mobile-sidebar-open');mobileMenuOverlay.classList.add('active')});mobileSidebarCloseBtn.addEventListener('click',()=>{leftSidebarPane.classList.remove('mobile-sidebar-open');mobileMenuOverlay.classList.remove('active')});mobileMenuOverlay.addEventListener('click',()=>{leftSidebarPane.classList.remove('mobile-sidebar-open');mobileMenuOverlay.classList.remove('active')});leftSidebarPane.addEventListener('click',(event)=>{if(event.target!==leftSidebarPane){return}
if(window.innerWidth>768&&leftSidebarPane.classList.contains('collapsed')){leftSidebarPane.classList.remove('collapsed');updateSidebarToggleIcon()}})}
function updateSidebarToggleIcon(){if(leftSidebarPane.classList.contains('collapsed')){sidebarToggleBtn.innerHTML='<span>☰</span>';sidebarToggleBtn.setAttribute('aria-label','Expand Sidebar')}else{sidebarToggleBtn.innerHTML='<span>←</span>';sidebarToggleBtn.setAttribute('aria-label','Collapse Sidebar')}}
function showAllAnswersForSection(sectionName,items){console.log(`Showing all answers for: ${sectionName}`);currentStudyingSectionName=sectionName;currentStudyingSectionItems=items;clearAllMapMarkers();studyModeMarkers=[];studyModeTitleEl.textContent=`Viewing All Answers for: ${sectionName}`;studyItemsListEl.innerHTML='';const bounds=new google.maps.LatLngBounds();items.forEach(item=>{const card=document.createElement('div');card.className='study-item-card';card.innerHTML=`
            <h4>${item.name}</h4>
            <p><strong>Significance:</strong> ${item.significance}</p>
            ${item.hint ? `<p class="hint"><em>Hint:${item.hint}</em></p>` : ''}
        `;card.addEventListener('click',()=>{if((item.type==='point'&&item.lat&&item.lng)||(item.type==='identify_region_mcq'&&item.mapMarkerInfo&&item.mapMarkerInfo.lat&&item.mapMarkerInfo.lng)){let targetLat=item.type==='point'?item.lat:item.mapMarkerInfo.lat;let targetLng=item.type==='point'?item.lng:item.mapMarkerInfo.lng;map.panTo({lat:targetLat,lng:targetLng});map.setZoom(8)}});studyItemsListEl.appendChild(card);let markerLat,markerLng,markerLabelTextForDisplay,markerTitle,actualLabelTextForStorage;if(item.type==='point'&&item.lat&&item.lng){markerLat=item.lat;markerLng=item.lng;actualLabelTextForStorage=item.name;markerTitle=item.name}else if(item.type==='identify_region_mcq'&&item.mapMarkerInfo&&item.mapMarkerInfo.lat&&item.mapMarkerInfo.lng){markerLat=item.mapMarkerInfo.lat;markerLng=item.mapMarkerInfo.lng;actualLabelTextForStorage=`${item.mapMarkerInfo.label}: ${item.correctOption}`;markerTitle=`${item.name} (Region for ${item.mapMarkerInfo.label} - ${item.correctOption})`}
markerLabelTextForDisplay=showStudyLabels?actualLabelTextForStorage:null;if(markerLat!==undefined&&markerLng!==undefined){const markerOptions={position:{lat:markerLat,lng:markerLng},map:map,title:markerTitle,};if(markerLabelTextForDisplay){markerOptions.label={text:markerLabelTextForDisplay,color:'black',fontWeight:'bold',fontSize:'10px',className:'map-marker-label'}}
const marker=new google.maps.Marker(markerOptions);marker.customLabelText=actualLabelTextForStorage;const infowindowHTML=`
                <div class="custom-infowindow-content">
                    <h4>${item.name}</h4>
                    <p>${item.significance}</p>
                    ${item.type === 'identify_region_mcq' ? `<p><strong>Correct Answer:</strong>${item.correctOption}</p>` : ''}
                </div>
            `;marker.addListener('click',()=>{infoWindow.setContent(infowindowHTML);infoWindow.open(map,marker)});studyModeMarkers.push(marker);bounds.extend(marker.getPosition())}
if(window.innerWidth>768){if(!leftSidebarPane.classList.contains('collapsed')){leftSidebarPane.classList.add('collapsed');updateSidebarToggleIcon()}}else{if(leftSidebarPane.classList.contains('mobile-sidebar-open')){leftSidebarPane.classList.remove('mobile-sidebar-open');mobileMenuOverlay.classList.remove('active')}}});if(studyModeMarkers.length>0){map.fitBounds(bounds);google.maps.event.addListenerOnce(map,'bounds_changed',function(){if(this.getZoom()>10&&studyModeMarkers.length<=3){this.setZoom(8)}else if(this.getZoom()>12){this.setZoom(12)}})}else if(items.length>0){map.setCenter({lat:22.5937,lng:78.9629});map.setZoom(5)}
showQuestionPaneView('studyMode');if(window.innerWidth>768&&!leftSidebarPane.classList.contains('collapsed')){leftSidebarPane.classList.add('collapsed');updateSidebarToggleIcon()}else if(window.innerWidth<=768&&leftSidebarPane.classList.contains('mobile-sidebar-open')){leftSidebarPane.classList.remove('mobile-sidebar-open')}}
function clearAllMapMarkers(){if(userMarker)userMarker.setMap(null);if(correctLocationMarker)correctLocationMarker.setMap(null);if(mapOverlayMarker)mapOverlayMarker.setMap(null);studyModeMarkers.forEach(marker=>marker.setMap(null));userMarker=null;correctLocationMarker=null;mapOverlayMarker=null;studyModeMarkers=[];if(infoWindow)infoWindow.close();}
function getCurrentMapStyle(){if(useColorfulMap){return colorfulMapConfig}else{if(showStateBoundaries){console.log("Applying examStyleMapConfig (with state boundaries)");return examStyleMapConfig}else{console.log("Applying examStyleMapNoStateBoundariesConfig (NO state boundaries)");return examStyleMapNoStateBoundariesConfig}}}
function applyMapStyle(){if(map){const newStyle=getCurrentMapStyle();map.setOptions({styles:newStyle});console.log("Map style applied:",newStyle?"Custom Style":"Default Google Style")}}
function getCurrentMapIdToUse(){if(useColorfulMap){console.log("Using Map ID: COLORFUL");return MAP_ID_COLORFUL}else{if(showStateBoundaries){console.log("Using Map ID: EXAM_WITH_STATES");return MAP_ID_EXAM_WITH_STATES}else{console.log("Using Map ID: EXAM_NO_STATES");return MAP_ID_EXAM_NO_STATES}}}
function createMap(){const mapOptions={center:{lat:22.5937,lng:78.9629},zoom:5,minZoom:4,maxZoom:8,restriction:{latLngBounds:{north:37.0,south:7.0,west:67.0,east:98.0},strictBounds:!1},mapTypeControl:!1,streetViewControl:!1,fullscreenControl:!1,zoomControl:!0,mapId:getCurrentMapIdToUse()};if(map){console.log("Re-creating map instance.")}
map=new google.maps.Map(document.getElementById("map"),mapOptions);map.addListener('click',handleMapClick);if(quizContentAreaEl.classList.contains('active-view')&&currentQuestion){conditionallyRenderMcqMarkerForCurrentQuestion()}else if(studyModeContentEl.classList.contains('active-view')&&currentStudyingSectionItems.length>0){showAllAnswersForSection(currentStudyingSectionName,currentStudyingSectionItems,!1)}
console.log("Map created/re-created with Map ID:",map.getMapId())}
function conditionallyRenderMcqMarkerForCurrentQuestion(){if(mapOverlayMarker)mapOverlayMarker.map=null;mapOverlayMarker=null;if(currentQuestion&&currentQuestion.type==='identify_region_mcq'&&currentQuestion.mapMarkerInfo&&currentQuestion.mapMarkerInfo.label&&typeof currentQuestion.mapMarkerInfo.lat==='number'&&typeof currentQuestion.mapMarkerInfo.lng==='number'){const regionMarkerLabelElement=document.createElement('div');regionMarkerLabelElement.textContent=currentQuestion.mapMarkerInfo.label;regionMarkerLabelElement.style.padding='5px 8px';regionMarkerLabelElement.style.backgroundColor='rgba(0, 0, 0, 0.7)';regionMarkerLabelElement.style.color='white';regionMarkerLabelElement.style.borderRadius='50%';regionMarkerLabelElement.style.fontSize='16px';regionMarkerLabelElement.style.fontWeight='bold';regionMarkerLabelElement.style.textAlign='center';mapOverlayMarker=new google.maps.marker.AdvancedMarkerElement({position:{lat:currentQuestion.mapMarkerInfo.lat,lng:currentQuestion.mapMarkerInfo.lng},map:map,content:regionMarkerLabelElement,title:`Region ${currentQuestion.mapMarkerInfo.label}: ${currentQuestion.targetAreaDescription || currentQuestion.name}`,})}}